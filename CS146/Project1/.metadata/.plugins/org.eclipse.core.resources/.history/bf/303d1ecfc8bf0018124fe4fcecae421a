package sjsu.Voronova.cs146.project1;

public class PrisonerLinkedList {
	
	private ListNode tail;
	private ListNode head;
	private int size;
	
	public PrisonerLinkedList() {
		head = null;
		tail = null;
		size = 0;
	}
	private class ListNode{
		
		private ListNode next;
		private int data;
		
		public ListNode(int data) {
			this.data = data;
		}
		
		public void setNext(ListNode node) {
			next = node;
		}
		public ListNode getNext() {
			return next;
		}
	}
	
	public boolean isEmpty() {
		return size == 0;
	}
	
	public void add(int data) {
		
		ListNode dataNode = new ListNode(data);
		if(size == 0) {
			setHead(dataNode);
		}else {
			tail.setNext(dataNode);
			tail = dataNode;
			tail.setNext(head);
			size++;
		}
	}
	
	private void setHead(ListNode dataNode) {
		head = dataNode;
		tail = dataNode;
		head.setNext(tail);
		tail.setNext(head);
		size = 1;
	}
	
	public int eliminatePrisoners(int key) {
		
		ListNode currentNode = head;//starts at head
		
		while(size != 1) {
			
			for(int i = 1; i < key; i++) {
				currentNode = currentNode.getNext(); //moves forward by 1
			}
			currentNode.setNext(currentNode.getNext().getNext()); //skips node right after currentNode
			currentNode = currentNode.getNext(); //moves forward by 1
			size--;
		}
		setHead(currentNode);
		return currentNode.data;
	}
	
	public int getHead() {
		return head.data;
	}
	
	public int getTail() {
		return tail.data;
	}
	
}
